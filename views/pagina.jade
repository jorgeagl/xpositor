h1 Utilizar imagenes vectoriales en Android
p(style='text-align:justify')
  img.aligncenter.size-full.wp-image-10014(alt='Android_SVG', src='http://i2.wp.com/geekytheory.com/wp-content/uploads/2014/07/Android_SVG.png?resize=1024%2C640', style='height:481px; width:770px')
  br
  | El networking es vital en el mundo del software, y desde Geeky Theory siempre lo hemos incentivado y hemos intentado ser participes de ello, como todas las charlas a las que asistimos y/o las que nosotros damos. En esta clase de evento se aprenden cosas que de otra manera muy dif&iacute;cilmente podr&iacute;amos acceder o conocer.
p(style='text-align:justify')
  | En uno de estos evento comentaba un ponente y amigo 
  a(href='https://plus.google.com/+TxusBallesteros', target='_blank', title='Perfil de gplus de Txus') Txus Ballesteros
  |  la utilizaci&oacute;n de este formato de im&aacute;genes para la utilizaci&oacute;n como iconos en aplicaciones Android. La causa de la utilizaci&oacute;n de este formato es su potencia de reutilizaci&oacute;n puesto que es vectorial y no matricial.
.alert
  | Los que no sep&aacute;is de que va esto, resumir que un 
  a(href='http://es.wikipedia.org/wiki/Scalable_Vector_Graphics', target='_blank', title='SVG en wikipedia') SVG
  |  se puede considerar una funci&oacute;n, por lo que puede ser redimensionada todo lo que se quiera al no estar generada por pixeles
p(style='text-align:justify')
  | Para los que hab&eacute;is pasado por un desarrollo en Android un poco serio, os habr&eacute;is topado por la adaptaci&oacute;n de vuestros recursos para diferentes terminales, con la 
  strong repetici&oacute;n del misma imagen de icono para cada una de las densidades
  |  hdpi,mdpi,ldpi,xhdpi,&mldr; aumentando much&iacute;simo el peso de la aplicaci&oacute;n final.
p(style='text-align:justify')
  | Con la utilizaci&oacute;n de los SVG reducimos ese peso, y el de la RAM en muchos casos teniendo solamente un &uacute;nico recurso que ser&aacute; el SVG que reescalaremos para cada caso.
p(style='text-align:justify')
  | Para su utilizaci&oacute;n en Android, 
  a(href='https://github.com/japgolly/svg-android', target='_blank', title='Librería de uso de SVG en Android') haremos uso de una librer&iacute;a
  |  que nos facilitar&aacute; pintar &ldquo;esa funci&oacute;n&rdquo; en nuestra aplicaci&oacute;n.
p(style='text-align:justify')
  | La imagen SVG podremos dibujarla con cualquier editor de im&aacute;genes vectoriales, yo os aconsejo Adobe Illustrator o su homologo open source Inksacape.
p(style='text-align:justify')
  | Como curiosidad os paso el contenido del archivo de ejemplo, esto es lo que nos encontramos si abrimos un .svg con un editor de texto. Como podemos ver, es texto plano, &ldquo;una funci&oacute;n&rdquo; que dice como pintar la imagen.
h1 Utilizar imagenes vectoriales en Android
p(style='text-align:justify')
  img.aligncenter.size-full.wp-image-10014(alt='Android_SVG', src='http://i2.wp.com/geekytheory.com/wp-content/uploads/2014/07/Android_SVG.png?resize=1024%2C640', style='height:481px; width:770px')
  br
  | El networking es vital en el mundo del software, y desde Geeky Theory siempre lo hemos incentivado y hemos intentado ser participes de ello, como todas las charlas a las que asistimos y/o las que nosotros damos. En esta clase de evento se aprenden cosas que de otra manera muy dif&iacute;cilmente podr&iacute;amos acceder o conocer.
p(style='text-align:justify')
  | En uno de estos evento comentaba un ponente y amigo 
  a(href='https://plus.google.com/+TxusBallesteros', target='_blank', title='Perfil de gplus de Txus') Txus Ballesteros
  |  la utilizaci&oacute;n de este formato de im&aacute;genes para la utilizaci&oacute;n como iconos en aplicaciones Android. La causa de la utilizaci&oacute;n de este formato es su potencia de reutilizaci&oacute;n puesto que es vectorial y no matricial.
.alert
  | Los que no sep&aacute;is de que va esto, resumir que un 
  a(href='http://es.wikipedia.org/wiki/Scalable_Vector_Graphics', target='_blank', title='SVG en wikipedia') SVG
  |  se puede considerar una funci&oacute;n, por lo que puede ser redimensionada todo lo que se quiera al no estar generada por pixeles
p(style='text-align:justify')
  | Para los que hab&eacute;is pasado por un desarrollo en Android un poco serio, os habr&eacute;is topado por la adaptaci&oacute;n de vuestros recursos para diferentes terminales, con la 
  strong repetici&oacute;n del misma imagen de icono para cada una de las densidades
  |  hdpi,mdpi,ldpi,xhdpi,&mldr; aumentando much&iacute;simo el peso de la aplicaci&oacute;n final.
p(style='text-align:justify')
  | Con la utilizaci&oacute;n de los SVG reducimos ese peso, y el de la RAM en muchos casos teniendo solamente un &uacute;nico recurso que ser&aacute; el SVG que reescalaremos para cada caso.
p(style='text-align:justify')
  | Para su utilizaci&oacute;n en Android, 
  a(href='https://github.com/japgolly/svg-android', target='_blank', title='Librería de uso de SVG en Android') haremos uso de una librer&iacute;a
  |  que nos facilitar&aacute; pintar &ldquo;esa funci&oacute;n&rdquo; en nuestra aplicaci&oacute;n.
p(style='text-align:justify')
  | La imagen SVG podremos dibujarla con cualquier editor de im&aacute;genes vectoriales, yo os aconsejo Adobe Illustrator o su homologo open source Inksacape.
p(style='text-align:justify')
  | Como curiosidad os paso el contenido del archivo de ejemplo, esto es lo que nos encontramos si abrimos un .svg con un editor de texto. Como podemos ver, es texto plano, &ldquo;una funci&oacute;n&rdquo; que dice como pintar la imagen.
p Hola buenas tardes
p Hola buenas tardes
p Hola buenas tardes
p Hola buenas tardes
p Hola buenas tardes
p Hola buenas tardes
